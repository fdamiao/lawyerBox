// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeblawyersBox.Data;

namespace WeblawyersBox.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211213180840_adempresatoall")]
    partial class adempresatoall
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("IdentityUserClaim<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WeblawyersBox.Models.ActividadesProcessos", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descricaoactividades")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("Processo_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idprocesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<int>("prioridades")
                        .HasColumnType("int");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Ids");

                    b.HasIndex("Processo_TbIds");

                    b.ToTable("ActividadesProcessos");
                });

            modelBuilder.Entity("WeblawyersBox.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("WeblawyersBox.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("apelido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empresa_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("empresa_TbIds");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Audiencia_tab", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataMarcada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datatermino")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("LocaldaAudiencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("cores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataCreataud")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("descricaevento")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("evento")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("idProcesso")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prioridade")
                        .HasColumnType("int");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.HasIndex("idProcesso");

                    b.ToTable("Audiencia_Tabs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Cliente_tb", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ndocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("apelido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacionalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profissao")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.ToTable("Cliente_Tbs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.CobrancaTB", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<double>("Iva")
                        .HasColumnType("float");

                    b.Property<string>("Processo_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Totalgeral")
                        .HasColumnType("float");

                    b.Property<string>("consideracoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("desconto")
                        .HasColumnType("float");

                    b.Property<int>("estadoss")
                        .HasColumnType("int");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idprocesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("subtotal")
                        .HasColumnType("float");

                    b.HasKey("Ids");

                    b.HasIndex("Processo_TbIds");

                    b.ToTable("CobrancaTBs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.DetalhesCobranca", b =>
                {
                    b.Property<string>("Iddetalhes")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CobrancaTBIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<DateTime>("dataregistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("idcobranca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idprocesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iduser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("precoUnit")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Iddetalhes");

                    b.HasIndex("CobrancaTBIds");

                    b.ToTable("DetalhesCobrancas");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Documentos_Processos_tb", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("NomeFicheiro")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("idProcesso")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeDoc")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.HasIndex("idProcesso");

                    b.ToTable("Documentos_Processos_Tbs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Empresa_tb", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactoTelefone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailEmpresa")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LocalizacaoEmpresa")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LogoTipoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("caminho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("datefecho")
                        .HasColumnType("date");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Ids");

                    b.ToTable("Empresa_Tbs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.EstatusProcess", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Idprocesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("Processo_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.HasKey("Ids");

                    b.HasIndex("Processo_TbIds");

                    b.ToTable("EstatusProcesses");
                });

            modelBuilder.Entity("WeblawyersBox.Models.FacturacaoTbs", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Despesaestatus")
                        .HasColumnType("int");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("Processo_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("comprovativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("datarecebimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoDovalor")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idprocesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipofacturacao")
                        .HasColumnType("int");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Ids");

                    b.HasIndex("Processo_TbIds");

                    b.ToTable("FacturacaoTBs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Intrevistas", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DescricaoActividade")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("Processo_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dataConverca")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idprocesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.HasIndex("Processo_TbIds");

                    b.ToTable("Intrevistas");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Pessoas_Envolvidas_tb", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("idProcesso")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.HasIndex("idProcesso");

                    b.ToTable("Pessoas_Envolvidas_Tbs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Processo_tb", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cliente_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataDistribuicao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataNotificacao")
                        .HasColumnType("date");

                    b.Property<string>("Empresa_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Estados")
                        .HasColumnType("int");

                    b.Property<string>("Fisico")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Idcliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("NProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Objecto")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TituloProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("Valorcondenacao")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValordeCausa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("idempresas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("instacia")
                        .HasColumnType("int");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasKey("Ids");

                    b.HasIndex("Cliente_TbIds");

                    b.HasIndex("Empresa_TbIds");

                    b.ToTable("Processo_Tbs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.TpProcesso", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rubrica")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Ids");

                    b.ToTable("TpProcessos");
                });

            modelBuilder.Entity("WeblawyersBox.Models.licensastbs", b =>
                {
                    b.Property<string>("idlices")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("GB")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("datacriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("despesa")
                        .HasColumnType("bit");

                    b.Property<bool>("honorarios")
                        .HasColumnType("bit");

                    b.Property<double>("preco")
                        .HasColumnType("float");

                    b.Property<int>("processo")
                        .HasColumnType("int");

                    b.Property<bool>("timeshe")
                        .HasColumnType("bit");

                    b.Property<int>("tipodelicass")
                        .HasColumnType("int");

                    b.Property<int>("usuarios")
                        .HasColumnType("int");

                    b.HasKey("idlices");

                    b.ToTable("licensastbs");
                });

            modelBuilder.Entity("WeblawyersBox.Models.pagamentoLicenca", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Empresa_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("datapagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("estadoss")
                        .HasColumnType("int");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idlicensa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licensastbsidlices")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("meses")
                        .HasColumnType("int");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("valorpago")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Ids");

                    b.HasIndex("Empresa_TbIds");

                    b.HasIndex("licensastbsidlices");

                    b.ToTable("PagamentoLicencas");
                });

            modelBuilder.Entity("WeblawyersBox.Models.timesheetTbs", b =>
                {
                    b.Property<string>("Ids")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Iduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<string>("Processo_TbIds")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cargo")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("datacreat")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("datarealisada")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricadashoras")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal>("horasrealizadas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("idempresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idprocesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.HasIndex("Processo_TbIds");

                    b.ToTable("TimesheetTbs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("WeblawyersBox.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("WeblawyersBox.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WeblawyersBox.Models.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("WeblawyersBox.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("WeblawyersBox.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeblawyersBox.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("WeblawyersBox.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeblawyersBox.Models.ActividadesProcessos", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany()
                        .HasForeignKey("Processo_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.ApplicationUser", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Empresa_tb", "empresa_Tb")
                        .WithMany()
                        .HasForeignKey("empresa_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Audiencia_tab", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany("Audiencia_Tabs")
                        .HasForeignKey("idProcesso");
                });

            modelBuilder.Entity("WeblawyersBox.Models.CobrancaTB", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany("CobrancaTBs")
                        .HasForeignKey("Processo_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.DetalhesCobranca", b =>
                {
                    b.HasOne("WeblawyersBox.Models.CobrancaTB", "CobrancaTB")
                        .WithMany()
                        .HasForeignKey("CobrancaTBIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Documentos_Processos_tb", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "idProcessoNavigation")
                        .WithMany("Documentos_Processos_tb")
                        .HasForeignKey("idProcesso");
                });

            modelBuilder.Entity("WeblawyersBox.Models.EstatusProcess", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany()
                        .HasForeignKey("Processo_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.FacturacaoTbs", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany("FacturacaoTbs")
                        .HasForeignKey("Processo_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Intrevistas", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany("DetalhesdeActividades")
                        .HasForeignKey("Processo_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Pessoas_Envolvidas_tb", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "idProcessoNavigation")
                        .WithMany("Pessoas_Envolvidas_tb")
                        .HasForeignKey("idProcesso");
                });

            modelBuilder.Entity("WeblawyersBox.Models.Processo_tb", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Cliente_tb", "Cliente_Tb")
                        .WithMany("Processo_tb")
                        .HasForeignKey("Cliente_TbIds");

                    b.HasOne("WeblawyersBox.Models.Empresa_tb", "Empresa_Tb")
                        .WithMany("Processo_Tb")
                        .HasForeignKey("Empresa_TbIds");
                });

            modelBuilder.Entity("WeblawyersBox.Models.pagamentoLicenca", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Empresa_tb", "Empresa_Tb")
                        .WithMany()
                        .HasForeignKey("Empresa_TbIds");

                    b.HasOne("WeblawyersBox.Models.licensastbs", "licensastbs")
                        .WithMany()
                        .HasForeignKey("licensastbsidlices");
                });

            modelBuilder.Entity("WeblawyersBox.Models.timesheetTbs", b =>
                {
                    b.HasOne("WeblawyersBox.Models.Processo_tb", "Processo_Tb")
                        .WithMany()
                        .HasForeignKey("Processo_TbIds");
                });
#pragma warning restore 612, 618
        }
    }
}
